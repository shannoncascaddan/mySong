public class Song implements Comparable<Song>
{
    //1) instance variables
    private String title;
    private String artist; //composer
    private boolean hasLyrics;
    private int length;//sec
    private double fileSize; // in megaBytes
    private static int count = 0;// number of songs

    //2)Constructors
    //overloaded constructors have early binding (determined at compile time)
    public Song()
    {
        title = null;
        artist = null;
        hasLyrics = false;
        length = 0;
        fileSize = 0.0;
        count++;
    }//end 0 arg or default constructor

    public Song(String title, String artist, boolean hasLyrics, int length, double fileSize)
    {
        this.title = title;
        this.artist = artist;
        this.hasLyrics = hasLyrics;
        this.length = checkLength(length);
        this.fileSize = fileSize;
        count++;
    }// end multi arg constructor

    public Song(String newTitle, String newArtist, boolean newHasLyrics)
    {
        title = newTitle;
        artist = newArtist;
        hasLyrics = newHasLyrics;
        length = 0;
        fileSize = 0.0;
        count++;
    }//end 3 arg constructor

    //4 Getters
    public String getTitle()
    {
        return title;
    }//end get tilte method

    public String getArtist()
    {
        return artist;
    }//end artist method

    public boolean getHasLyrics()
    {
        return hasLyrics;
    }//end getHasLyrics

    public int getLength()
    {
        return length;
    }//end getLength

    public double getFileSize()
    {
        return fileSize;
    }//end getFileSize
    public static int getCount()
    {
        return count;
    }//end getCount

    // 5 Setters
    public void setTitle(String newTitle)
    {
        title = newTitle;
    }//end setTitle
    public void setArtist(String newArtist)
    {
        artist = newArtist;
    }//end setArtist
    public void setHasLyrics(boolean newHasLyrics)
    {
        hasLyrics = newHasLyrics;
    }//end setHasLyrics
    //Pre-condition: the objuct exists
    //Post-Condition: 0<= length <= 1200
    public void setLength(int newLength)
    {
        length = checkLength(newLength);
    }//end setLength
    public void setFileSize(double newFileSize)
    {
        fileSize = newFileSize;
    }//end setFileSize

    //6 Brain methods
    public String toMinSec()
    {
        int min = length/60;
        int sec = length % 60;
        return  min + " min " + sec +" sec";
    }//end toMinSec
    public int compareTo(Song someSong)
    {
        if(this.length < someSong.length)
        {
            return -1;
        }//end < if
        if(this.length == someSong.length)
        {
            return 0;
        }//end == if
        else
        {
            return 1;
        }//end else (>)
    }//end compareTo implenmented from interface comarable

    //CheckLength is a helper method It is private because is helps other methods by validating
    //example of method decomposition - does just one thing
    private int checkLength(int newLength)
    {
        int tempLength = newLength;
        if(tempLength < 0 )
        {
            tempLength = 0;
        }//end if
        else if (tempLength > 1200)
        {
            tempLength = 1200;
        }//end else if
        return tempLength;
    }//end checkLength

    //3. must have toString for every object
    public String toString()
    {
        String output = "";
        output += "Title: " + title;
        output += "\nArtist: "+artist;
        output += "\nHas Lyrics?: " + hasLyrics;
        output += "\nLength(seconds): " + length;
        output += "\nFile Size(mB): "+ fileSize;
        return output;
    }//end toString

}//end class song
